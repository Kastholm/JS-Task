/* 游닀 Historie:

Du er en dataforsker, der arbejder for et innovativt teknologiselskab, der analyserer 
sociale mediedata for at opdage trends og indsigter. Du har f친et til opgave at analysere en stor 
dataset af tweets for at finde ud af, hvilke emner der er mest popul칝re, og hvordan sentimentet 
omkring disse emner er.

游닇 Opgave:

Du f친r en liste over tweets, hvor hvert tweet indeholder en tekst og en sentiment-score 
(fra 0 til 1, hvor 1 er mest positiv). Din opgave er at:

Ekstrahere alle hashtags fra alle tweets og t칝lle, hvor mange gange hvert hashtag forekommer.
Identificere de top 3 mest anvendte hashtags.
For hvert af de top 3 hashtags skal du beregne den gennemsnitlige sentiment-score for tweets, 
der indeholder dette hashtag.
Logge resultaterne til konsollen.


Brug en Map eller et objekt til at t칝lle forekomsten af hvert hashtag.
For at ekstrahere hashtags fra teksten, kan du bruge regul칝re udtryk eller splitte teksten og filtrere efter ord, der starter med #.
Beregn gennemsnittet af sentiment-score for tweets, der indeholder et bestemt hashtag.
Husk at h친ndtere tilf칝lde, hvor tweets indeholder flere hashtags. */

const tweets = [
  { text: 'Elsker at kode i JavaScript! #programmering #javascript', sentiment: 0.9 },
  { text: 'Node.js er fantastisk til server-side udvikling. #javascript #nodejs', sentiment: 0.8 },
  { text: 'Har nogen tips til async/await? #javascript #hj칝lp', sentiment: 0.5 },
  { text: 'Python eller JavaScript, hvad foretr칝kker du? #python #javascript', sentiment: 0.7 },
  { text: 'TypeScript g칮r JavaScript bedre! #typescript #javascript', sentiment: 0.85 },
  { text: 'Front-end udvikling er s친 sjovt. #frontend #javascript #html', sentiment: 0.9 },
  { text: 'Jeg k칝mper med bugs i min kode... #programmering #frustration', sentiment: 0.2 },
  { text: 'Async programming kan v칝re sv칝rt at forst친. #javascript #async', sentiment: 0.6 },
  { text: 'Klar til at l칝re mere om Node.js! #nodejs #l칝ring', sentiment: 0.8 },
  { text: 'JavaScript er s친 alsidigt. #javascript #webdev', sentiment: 0.9 },
];
let hashtags = [];

tweets.map((tweet) => {
    let words = tweet.text.trim().split(/\s+/);
    for(let w = 0; w < words.length; w++) { 
        if(words[w].includes('#')) {
            hashtags.push({'word': words[w], 'sentiment': tweet.sentiment})
        }
    }
})

hashtags = hashtags.reduce((acc, hashtag) => {
    const tag = hashtag.word;
    if(!acc[tag]) {
        acc[tag] = []
        acc[tag].push({'counter': 0})
    }
    acc[tag].push(hashtag);
    acc[tag][0].counter +=1;

    return acc;
}, {})

hashtags = Object.entries(hashtags).sort((a, b) => b[1][0].counter - a[1][0].counter)

const topTags = hashtags.slice(0, 3)

topTags.forEach((tag, index) => { 

    tag.push({'amount': 0})

    for(let t = 1; t < tag[1].length; t++ ) {
        if(tag[0].toString() === tag[1][t].word) {
            tag[2].amount += tag[1][t].sentiment;
        }
    }
    tag.push({'average': 0})
    tag[3].average = tag[2].amount / (tag[1].length - 1)

})


console.log(topTags)